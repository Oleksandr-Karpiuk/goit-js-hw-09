{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7CbQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBX,SAAU,aACVY,QAAS,MAGXC,SAASC,cAAc,SAASC,iBAAiB,UAAUC,IACzDA,EAAEC,iBAEF,MAAQhB,MAAAiB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAC1CC,EAAaC,SAASN,EAAMO,OAC5BC,EAAYF,SAASL,EAAKM,OAC1BE,EAAcH,SAASJ,EAAOK,OAEpC,IAAK,IAAIG,EAAQ,EAAGA,EAAQD,EAAaC,GAAS,EAAG,CACnD,GAAIL,EAAa,GAAKG,EAAY,EAGhC,OAFAV,EAAEK,cAAcQ,aAChBpB,EAAAZ,GAASa,OAAOoB,QAAQ,yBAK1B/B,EAAc6B,EADAA,EAAQF,EAAYH,GAE/BQ,MAAK,EAAC/B,SAAEA,EAAQC,MAAEA,KACjBQ,EAAAZ,GAASa,OAAOsB,QACd,qBAAqBhC,EAAW,QAAQC,SAG3CgC,OAAM,EAACjC,SAAEA,EAAQC,MAAEA,KAClBQ,EAAAZ,GAASa,OAAOoB,QACd,oBAAoB9B,EAAW,QAAQC,SAG7Ce,EAAEK,cAAcQ,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  position: 'center-top',\n  timeout: 5000,\n});\n\ndocument.querySelector('.form').addEventListener('submit', e => {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget.elements;\n  const delayValue = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (let index = 0; index < amountValue; index += 1) {\n    if (delayValue < 0 || stepValue < 0) {\n      e.currentTarget.reset();\n      Notiflix.Notify.failure('Введіть коректні дані');\n      return;\n    }\n\n    const delay = index * stepValue + delayValue;\n    createPromise(index, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        )\n      );\n    e.currentTarget.reset();\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","timeout","document","querySelector","addEventListener","e","preventDefault","delay2","step","amount","currentTarget","elements","delayValue","parseInt","value","stepValue","amountValue","index","reset","failure","then","success","catch"],"version":3,"file":"03-promises.dd2ad34c.js.map"}